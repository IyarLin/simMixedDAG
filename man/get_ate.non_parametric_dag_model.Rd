% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_ate.non_parametric_dag_model.R
\name{get_ate.non_parametric_dag_model}
\alias{get_ate.non_parametric_dag_model}
\title{Get \eqn{ATE} for a non paramteric DAG model}
\usage{
\method{get_ate}{non_parametric_dag_model}(dag_model, treatment,
  treatment_vals = NULL, exposure, M = 1000)
}
\arguments{
\item{dag_model}{An object of class "non_parametric_dag_model".}

\item{treatment}{Name of a \strong{single} treatment variable.}

\item{treatment_vals}{A vector of treatment values to be considered.}

\item{exposure}{Name of a \strong{single} exposure variable.}

\item{M}{Number of simulations to run. Each simulation dataset consists of 1000 observations.}
}
\value{
A data.frame with 3 columns:
\enumerate{
\item From: The baseline treatment value.
\item To: The value a treatment was changed to.
\item ATE: The average treatment effect of changing the treatment
value from "From" to "To.
}
}
\description{
\code{get_ate.non_parametric_dag_model} uses simulations
to calculate the average treatment effect (\eqn{ATE}) of
a treatment variable on an exposure variable given
a non parametric DAG model.
}
\examples{
require(carData); require(dagitty)
data("GSSvocab")
GSSvocab <- GSSvocab[complete.cases(GSSvocab), ]
g <- dagitty("dag {
             ageGroup [pos=\\"0,0\\"]
             vocab [pos=\\"1,-1\\"]
             nativeBorn [pos=\\"2,-2\\"]
             educ [pos=\\"3,-1\\"]
             gender [pos=\\"4,0\\"]
             nativeBorn -> educ
             nativeBorn -> vocab
             educ -> vocab
             gender -> educ
             ageGroup -> vocab
             }")
plot(g)
non_param_dag_model <- non_parametric_dag_model(dag = g, data = GSSvocab)

nativeBorn_ATE_on_vocab <- get_ate(dag_model = non_param_dag_model, treatment = "nativeBorn", exposure = "vocab")
print(nativeBorn_ATE_on_vocab)
}
\seealso{
\code{\link{get_ate.parametric_dag_model}} for parametric DAG model \eqn{ATE} calculation.
}
